server.port=8762
spring.application.name=gateway-service

eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka

spring.cloud.gateway.enabled=true
spring.cloud.discovery.enabled=true

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.discovery.locator.include-expression=true

# Map paths to user service
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service:8080/
spring.cloud.gateway.routes[0].predicates[0]=Path=/user/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/user, /

# Map paths to product service
spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://product-service:8081/
spring.cloud.gateway.routes[1].predicates[0]=Path=/product/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/product, /

# Map paths to cart service
spring.cloud.gateway.routes[2].id=cart-service
spring.cloud.gateway.routes[2].uri=lb://cart-service:8083/
spring.cloud.gateway.routes[2].predicates[0]=Path=/cart/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/cart, /

# Map paths to order services
spring.cloud.gateway.routes[3].id=order-service
spring.cloud.gateway.routes[3].uri=lb://order-service:8086/
spring.cloud.gateway.routes[3].predicates[0]=Path=/order/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/order, /

# Map path to auth service
spring.cloud.gateway.routes[4].id=login-service
spring.cloud.gateway.routes[4].uri=lb://eureka-login-service:9100/
spring.cloud.gateway.routes[4].predicates[0]=Path=/login/**

# By default, all requests to gallery service for example will start with: "/gallery/"
# What will be sent to the gallery service is what comes after the path defined, 
# So, if request is "/gallery/view/1", gallery service will get "/view/1".
# In case of auth, we need to pass the "/login/" in the path to login service. So, set strip-prefix to false
#spring.cloud.gateway.routes[4].filters[0]=StripPrefix=2

# Exclude authorization from sensitive headers
#zuul.routes.login-service.sensitive-headers=Cookie,Set-Cookie

#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 132000
spring.cloud.gateway.httpclient.connect-timeout=3000
spring.cloud.gateway.httpclient.response-timeout=60s
ribbon.ReadTimeout=132000

# ===============================
# = Eclipse plugin - ANSI Escape in Console
# ===============================
# To install the plugin in Eclipse select Help -> Install New Software... and click "Add.." to add the following URL:
# http://www.mihai-nita.net/eclipse
spring.main.banner-mode=off 
spring.output.ansi.enabled=ALWAYS

#logging.level.org.springframework.web=DEBUG
spring.mvc.log-request-details=false
org.springframework.cloud.gateway=INFO
logging.level.root=INFO


#management.endpoint.gateway.enabled=true
#management.endpoints.enabled-by-default=true

management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.beans.enabled=true

#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.enabled=true

user.service.url=lb://user-service:8080/

spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[0]=GET
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[1]=POST
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[2]=PUT
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods[3]=DELETE
